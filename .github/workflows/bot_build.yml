# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    environment: Build
    env:
      APP_ID: ${{ secrets.APP_ID }}
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: 'src'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Create Distribution Folder
      run: mkdir ../dist
      
    - name: Use Node.js 16.x
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    
    - name: NPM Install
      run: npm ci
    
    - name: Tactical Copy
      run: cp -r ../src/node_modules/sqlite3/lib/binding/node-v93-linux-x64 ../src/node_modules/sqlite3/lib/binding/node-v108-linux-x64

    - name: Debug Print
      run: tree ../src/node_modules/sqlite3/lib/binding

    - name: Build
      run: npm run build --if-present

    - name: Register Commands
      run: (cd ../register_commands && npm ci && node register.js)

    - name: Change Dir
      run: cd ..
    
    - name: Create Zip
      run: (cd ../dist && zip -r ../lambda_bot.zip .)
    
    
    - name: Deploy to AWS
      uses: appleboy/lambda-action@master
      with:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_region: us-east-2
        function_name: SquidBotLambda
        zip_file: lambda_bot.zip
